{"version":3,"sources":["../dist-esnext/Field.test.js"],"names":["field","describe","fieldConfig","initialField","beforeEach","bombs","size","x","y","getInitialField","it","map","col","pos","isBomb","length"],"mappings":";;AAAA;;AAEA;;IAAYA,K;;;;AACZ;AACA;AACAC,SAAS,OAAT,EAAkB,YAAM;AACpBA,aAAS,iBAAT,EAA4B,YAAM;AAC9B,YAAIC,WAAJ;AACA,YAAIC,YAAJ;AACAC,mBAAW,YAAM;AACbF,0BAAc;AACVG,uBAAO,CADG;AAEVC,sBAAM,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX;AAFI,aAAd;AAIAL,2BAAeH,MAAMS,eAAN,CAAsBP,WAAtB,CAAf;AACH,SAND;AAOAQ,WAAG,mDAAH,EAAwD,YAAM;AAC1D,gBAAIL,QAAQ,CAAZ;AACAF,yBAAaQ,GAAb,CAAiB;AAAA,uBAAOC,IAAID,GAAJ,CAAQ;AAAA,2BAAOE,IAAIC,MAAJ,GAAaT,OAAb,GAAuBA,KAA9B;AAAA,iBAAR,CAAP;AAAA,aAAjB;AACA,kCAAMA,KAAN,EAAaH,YAAYG,KAAzB;AACH,SAJD;AAKAK,WAAG,0CAAH,EAA+C,YAAM;AACjD,kCAAMP,aAAaY,MAAnB,EAA2Bb,YAAYI,IAAZ,CAAiBC,CAA5C;AACA,kCAAMJ,aAAa,CAAb,EAAgBY,MAAtB,EAA8Bb,YAAYI,IAAZ,CAAiBE,CAA/C;AACH,SAHD;AAIAE,WAAG,gEAAH,EAAqE,YAAM;AACvER,0BAAc;AACVG,uBAAO,EADG;AAEVC,sBAAM,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX;AAFI,aAAd;AAIAL,2BAAeH,MAAMS,eAAN,CAAsBP,WAAtB,CAAf;AACA,+BAAGC,YAAH;AACH,SAPD;AAQH,KA3BD;AA4BH,CA7BD;AA8BA;;AAlCA","file":"Field.test.js","sourcesContent":["import { equal, ok } from 'ptz-assert';\n// import { LogFile } from 'ptz-log-file';\nimport * as field from './Field';\n// import { IPosition } from './IPosition';\n// const log = LogFile({});\ndescribe('Field', () => {\n    describe('getInitialField', () => {\n        var fieldConfig;\n        var initialField;\n        beforeEach(() => {\n            fieldConfig = {\n                bombs: 5,\n                size: { x: 5, y: 5 }\n            };\n            initialField = field.getInitialField(fieldConfig);\n        });\n        it('bombs in the field should match fieldConfig bombs', () => {\n            var bombs = 0;\n            initialField.map(col => col.map(pos => pos.isBomb ? bombs++ : bombs));\n            equal(bombs, fieldConfig.bombs);\n        });\n        it('field size should match fieldConfig size', () => {\n            equal(initialField.length, fieldConfig.size.x);\n            equal(initialField[0].length, fieldConfig.size.y);\n        });\n        it('should throw an error if bombs number is bigger than fild size', () => {\n            fieldConfig = {\n                bombs: 27,\n                size: { x: 5, y: 5 }\n            };\n            initialField = field.getInitialField(fieldConfig);\n            ok(initialField);\n        });\n    });\n});\n//# sourceMappingURL=Field.test.js.map"]}
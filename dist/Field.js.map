{"version":3,"sources":["../dist-esnext/Field.js"],"names":["log","getBombs","field","fieldConfig","i","bombs","x","Math","floor","size","random","y","isBomb","isValidConfig","totalFields","getInitialField","Error","initialField","j","pos","bombedField","err"],"mappings":";;;;;;;AAAA;;AACA,IAAMA,MAAM,yBAAQ,EAAR,CAAZ;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,WAAzB,EAAsC;AAClC,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,YAAYE,KAAhC,EAAuCD,GAAvC,EAA4C;AACxC,YAAME,IAAIC,KAAKC,KAAL,CAAW,CAACL,YAAYM,IAAZ,CAAiBH,CAAjB,GAAqB,CAAtB,IAA2BC,KAAKG,MAAL,EAA3B,GAA2C,CAAtD,CAAV;AACA,YAAMC,IAAIJ,KAAKC,KAAL,CAAW,CAACL,YAAYM,IAAZ,CAAiBE,CAAjB,GAAqB,CAAtB,IAA2BJ,KAAKG,MAAL,EAA3B,GAA2C,CAAtD,CAAV;AACA,YAAIR,MAAMI,CAAN,EAASK,CAAT,KAAeT,MAAMI,CAAN,EAASK,CAAT,EAAYC,MAA/B,EACIR;AACJF,cAAMI,CAAN,EAASK,CAAT,EAAYC,MAAZ,GAAqB,IAArB;AACH;AACD,WAAOV,KAAP;AACH;AACD,SAASW,aAAT,CAAuBV,WAAvB,EAAoC;AAChC,QAAMW,cAAcX,YAAYM,IAAZ,CAAiBH,CAAjB,GAAqBH,YAAYM,IAAZ,CAAiBE,CAA1D;AACA,WAAOG,cAAcX,YAAYE,KAA1B,GAAkC,IAAlC,GAAyC,KAAhD;AACH;AACD,SAASU,eAAT,CAAyBZ,WAAzB,EAAsC;AAClC,QAAI;AACA,YAAI,CAACU,cAAcV,WAAd,CAAL,EAAiC;AAC7B,kBAAM,IAAIa,KAAJ,CAAU,6BAAV,CAAN;AACA;AACH;AACD,YAAMC,eAAe,EAArB;AACA,aAAK,IAAIb,IAAI,CAAb,EAAgBA,IAAID,YAAYM,IAAZ,CAAiBH,CAArC,EAAwCF,GAAxC,EAA6C;AACzCa,yBAAab,CAAb,IAAkB,EAAlB;AACA,iBAAK,IAAIc,IAAI,CAAb,EAAgBA,IAAIf,YAAYM,IAAZ,CAAiBE,CAArC,EAAwCO,GAAxC,EAA6C;AACzC,oBAAMC,MAAM,EAAEb,GAAGF,CAAL,EAAQO,GAAGO,CAAX,EAAcN,QAAQ,IAAtB,EAAZ;AACAK,6BAAab,CAAb,EAAgBc,CAAhB,IAAqBC,GAArB;AACH;AACJ;AACD,YAAMC,cAAcnB,SAASgB,YAAT,EAAuBd,WAAvB,CAApB;AACA,eAAOiB,WAAP;AACH,KAfD,CAgBA,OAAOC,GAAP,EAAY;AACRrB,YAAIqB,GAAJ;AACA,eAAOA,GAAP;AACH;AACJ;QACQN,e,GAAAA,e;AACT","file":"Field.js","sourcesContent":["import { LogFile } from 'ptz-log-file';\nconst log = LogFile({});\nfunction getBombs(field, fieldConfig) {\n    for (let i = 0; i < fieldConfig.bombs; i++) {\n        const x = Math.floor((fieldConfig.size.x - 1) * Math.random() + 1);\n        const y = Math.floor((fieldConfig.size.y - 1) * Math.random() + 1);\n        if (field[x][y] && field[x][y].isBomb)\n            i--;\n        field[x][y].isBomb = true;\n    }\n    return field;\n}\nfunction isValidConfig(fieldConfig) {\n    const totalFields = fieldConfig.size.x * fieldConfig.size.y;\n    return totalFields > fieldConfig.bombs ? true : false;\n}\nfunction getInitialField(fieldConfig) {\n    try {\n        if (!isValidConfig(fieldConfig)) {\n            throw new Error('Invalid field configuration');\n            // return;\n        }\n        const initialField = [];\n        for (let i = 0; i < fieldConfig.size.x; i++) {\n            initialField[i] = [];\n            for (let j = 0; j < fieldConfig.size.y; j++) {\n                const pos = { x: i, y: j, isBomb: null };\n                initialField[i][j] = pos;\n            }\n        }\n        const bombedField = getBombs(initialField, fieldConfig);\n        return bombedField;\n    }\n    catch (err) {\n        log(err);\n        return err;\n    }\n}\nexport { getInitialField };\n//# sourceMappingURL=Field.js.map"]}
{"version":3,"sources":["../dist-esnext/Field.js"],"names":["getBombs","field","fieldConfig","i","bombs","width","Math","floor","random","heigth","isBomb","isValidConfig","totalFields","countNearBombs","countedField","map","col","colIndex","pos","index","j","x","y","nearBombs","getInitialField","Error","initialField","bombedField"],"mappings":";;;;;AAAA;AACA;AACA,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,WAAzB,EAAsC;AAClC,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,YAAYE,KAAhC,EAAuCD,GAAvC,EAA4C;AACxC,YAAME,QAAQC,KAAKC,KAAL,CAAW,CAACL,YAAYG,KAAZ,GAAoB,CAArB,IAA0BC,KAAKE,MAAL,EAA1B,GAA0C,CAArD,CAAd;AACA,YAAMC,SAASH,KAAKC,KAAL,CAAW,CAACL,YAAYO,MAAZ,GAAqB,CAAtB,IAA2BH,KAAKE,MAAL,EAA3B,GAA2C,CAAtD,CAAf;AACA,YAAIP,MAAMI,KAAN,EAAaI,MAAb,KAAwBR,MAAMI,KAAN,EAAaI,MAAb,EAAqBC,MAAjD,EACIP;AACJF,cAAMI,KAAN,EAAaI,MAAb,EAAqBC,MAArB,GAA8B,IAA9B;AACH;AACD,WAAOT,KAAP;AACH;AACD,SAASU,aAAT,CAAuBT,WAAvB,EAAoC;AAChC,QAAMU,cAAcV,YAAYG,KAAZ,GAAoBH,YAAYO,MAApD;AACA,WAAOG,cAAcV,YAAYE,KAA1B,GAAkC,IAAlC,GAAyC,KAAhD;AACH;AACD,SAASS,cAAT,CAAwBZ,KAAxB,EAA+B;AAC3B,QAAMa,eAAeb,KAArB;AACAA,UAAMc,GAAN,CAAU,UAACC,GAAD,EAAMC,QAAN;AAAA,eAAmBD,IAAID,GAAJ,CAAQ,UAACG,GAAD,EAAMC,KAAN,EAAgB;AACjD,gBAAID,IAAIR,MAAR,EAAgB;AACZ,qBAAK,IAAIP,IAAI,CAAC,CAAd,EAAiBA,IAAI,CAArB,EAAwBA,GAAxB,EAA6B;AACzB,yBAAK,IAAIiB,IAAI,CAAC,CAAd,EAAiBA,IAAI,CAArB,EAAwBA,GAAxB,EAA6B;AACzB,4BAAIN,aAAaI,IAAIG,CAAJ,GAAQlB,CAArB,KAA2BW,aAAaI,IAAIG,CAAJ,GAAQlB,CAArB,EAAwBe,IAAII,CAAJ,GAAQF,CAAhC,CAA/B,EACIN,aAAaI,IAAIG,CAAJ,GAAQlB,CAArB,EAAwBe,IAAII,CAAJ,GAAQF,CAAhC,EAAmCG,SAAnC;AACP;AACJ;AACJ;AACJ,SAT4B,CAAnB;AAAA,KAAV;AAUA,WAAOT,YAAP;AACH;AACD,SAASU,eAAT,CAAyBtB,WAAzB,EAAsC;AAClC,QAAI,CAACS,cAAcT,WAAd,CAAL,EAAiC;AAC7B,cAAM,IAAIuB,KAAJ,CAAU,6BAAV,CAAN;AACH;AACD,QAAMC,eAAe,EAArB;AACA,SAAK,IAAIvB,IAAI,CAAb,EAAgBA,IAAID,YAAYG,KAAhC,EAAuCF,GAAvC,EAA4C;AACxCuB,qBAAavB,CAAb,IAAkB,EAAlB;AACA,aAAK,IAAIiB,IAAI,CAAb,EAAgBA,IAAIlB,YAAYO,MAAhC,EAAwCW,GAAxC,EAA6C;AACzC,gBAAMF,MAAM,EAAEG,GAAGlB,CAAL,EAAQmB,GAAGF,CAAX,EAAcV,QAAQ,KAAtB,EAA6Ba,WAAW,CAAxC,EAAZ;AACAG,yBAAavB,CAAb,EAAgBiB,CAAhB,IAAqBF,GAArB;AACH;AACJ;AACD,QAAMS,cAAc3B,SAAS0B,YAAT,EAAuBxB,WAAvB,CAApB;AACA,WAAOyB,WAAP;AACH;QACQH,e,GAAAA,e;QAAiBX,c,GAAAA,c;AAC1B","file":"Field.js","sourcesContent":["// import { LogFile } from 'ptz-log-file';\n// const log = LogFile({});\nfunction getBombs(field, fieldConfig) {\n    for (let i = 0; i < fieldConfig.bombs; i++) {\n        const width = Math.floor((fieldConfig.width - 1) * Math.random() + 1);\n        const heigth = Math.floor((fieldConfig.heigth - 1) * Math.random() + 1);\n        if (field[width][heigth] && field[width][heigth].isBomb)\n            i--;\n        field[width][heigth].isBomb = true;\n    }\n    return field;\n}\nfunction isValidConfig(fieldConfig) {\n    const totalFields = fieldConfig.width * fieldConfig.heigth;\n    return totalFields > fieldConfig.bombs ? true : false;\n}\nfunction countNearBombs(field) {\n    const countedField = field;\n    field.map((col, colIndex) => col.map((pos, index) => {\n        if (pos.isBomb) {\n            for (let i = -1; i < 2; i++) {\n                for (let j = -1; j < 2; j++) {\n                    if (countedField[pos.x + i] && countedField[pos.x + i][pos.y + j])\n                        countedField[pos.x + i][pos.y + j].nearBombs++;\n                }\n            }\n        }\n    }));\n    return countedField;\n}\nfunction getInitialField(fieldConfig) {\n    if (!isValidConfig(fieldConfig)) {\n        throw new Error('Invalid field configuration');\n    }\n    const initialField = [];\n    for (let i = 0; i < fieldConfig.width; i++) {\n        initialField[i] = [];\n        for (let j = 0; j < fieldConfig.heigth; j++) {\n            const pos = { x: i, y: j, isBomb: false, nearBombs: 0 };\n            initialField[i][j] = pos;\n        }\n    }\n    const bombedField = getBombs(initialField, fieldConfig);\n    return bombedField;\n}\nexport { getInitialField, countNearBombs };\n//# sourceMappingURL=Field.js.map"]}
{"version":3,"sources":["../dist-esnext/Battle.js"],"names":["startBattle","fieldConfig","width","height","bombs","field","battle","isOver","openPosition","pos","opened","openNearPositions","map","clickPosition","p","openAllField","col","endBattle","finalBattle","positionIsInvalid","position","console","log","x","length","y","isBomb","nearBombs"],"mappings":";;;;;;;AAAA;;AACA,SAASA,WAAT,GAAuB;AACnB,QAAMC,cAAc;AAChBC,eAAO,CADS;AAEhBC,gBAAQ,CAFQ;AAGhBC,eAAO;AAHS,KAApB;AAKA,QAAMC,QAAQ,4BAAgBJ,WAAhB,CAAd;AACA,QAAMK,SAAS;AACXD,oBADW;AAEXE,gBAAQ;AAFG,KAAf;AAIA,WAAOD,MAAP;AACH;AACD,SAASE,YAAT,CAAsBC,GAAtB,EAA2B;AACvBA,QAAIC,MAAJ,GAAa,IAAb;AACA,WAAOD,GAAP;AACH;AACD,SAASE,iBAAT,CAA2BL,MAA3B,EAAmCG,GAAnC,EAAwC;AACpC,8BAAcA,GAAd,EAAmBG,GAAnB,CAAuB;AAAA,eAAKC,cAAcP,MAAd,EAAsBQ,CAAtB,CAAL;AAAA,KAAvB;AACA,WAAOR,MAAP;AACH;AACD,SAASS,YAAT,CAAsBV,KAAtB,EAA6B;AACzB,WAAOA,MAAMO,GAAN,CAAU;AAAA,eAAOI,IAAIJ,GAAJ,CAAQ;AAAA,mBAAOJ,aAAaC,GAAb,CAAP;AAAA,SAAR,CAAP;AAAA,KAAV,CAAP;AACH;AACD,SAASQ,SAAT,CAAmBX,MAAnB,EAA2B;AACvB,QAAMY,cAAcZ,MAApB;AACAY,gBAAYX,MAAZ,GAAqB,IAArB;AACAW,gBAAYb,KAAZ,GAAoBU,aAAaG,YAAYb,KAAzB,CAApB;AACA,WAAOa,WAAP;AACH;AACD,SAASC,iBAAT,CAA2Bd,KAA3B,EAAkCe,QAAlC,EAA4C;AACxCC,YAAQC,GAAR,CAAY,6BAAZ;AACA,WAAOF,SAASG,CAAT,GAAa,CAAb,IAAkBH,SAASG,CAAT,IAAclB,MAAMmB,MAAtC,IAAgDJ,SAASK,CAAT,GAAa,CAA7D,IAAkEL,SAASK,CAAT,IAAcpB,MAAM,CAAN,EAASmB,MAAhG;AACH;AACD,SAASX,aAAT,CAAuBP,MAAvB,EAA+Bc,QAA/B,EAAyC;AACrC,QAAID,kBAAkBb,OAAOD,KAAzB,EAAgCe,QAAhC,CAAJ,EACI,OAAOd,MAAP;AACJ,QAAIG,MAAMH,OAAOD,KAAP,CAAae,SAASG,CAAtB,EAAyBH,SAASK,CAAlC,CAAV;AACA,QAAIhB,IAAIC,MAAR,EACI,OAAOJ,MAAP;AACJ,QAAIG,IAAIiB,MAAR,EAAgB;AACZL,gBAAQC,GAAR,CAAY,YAAZ,EAA0BF,QAA1B;AACA,eAAOH,UAAUX,MAAV,CAAP;AACH;AACDG,UAAMD,aAAaC,GAAb,CAAN;AACA,QAAIA,IAAIkB,SAAJ,KAAkB,CAAtB,EACIrB,SAASK,kBAAkBL,MAAlB,EAA0BG,GAA1B,CAAT;AACJ,WAAOH,MAAP;AACH;QACQN,W,GAAAA,W;QAAaa,a,GAAAA,a;AACtB","file":"Battle.js","sourcesContent":["import { getInitialField, nearPositions } from './Field';\nfunction startBattle() {\n    const fieldConfig = {\n        width: 9,\n        height: 9,\n        bombs: 9\n    };\n    const field = getInitialField(fieldConfig);\n    const battle = {\n        field,\n        isOver: false\n    };\n    return battle;\n}\nfunction openPosition(pos) {\n    pos.opened = true;\n    return pos;\n}\nfunction openNearPositions(battle, pos) {\n    nearPositions(pos).map(p => clickPosition(battle, p));\n    return battle;\n}\nfunction openAllField(field) {\n    return field.map(col => col.map(pos => openPosition(pos)));\n}\nfunction endBattle(battle) {\n    const finalBattle = battle;\n    finalBattle.isOver = true;\n    finalBattle.field = openAllField(finalBattle.field);\n    return finalBattle;\n}\nfunction positionIsInvalid(field, position) {\n    console.log('Invalid position, try again');\n    return position.x < 0 || position.x >= field.length || position.y < 0 || position.y >= field[0].length;\n}\nfunction clickPosition(battle, position) {\n    if (positionIsInvalid(battle.field, position))\n        return battle;\n    let pos = battle.field[position.x][position.y];\n    if (pos.opened)\n        return battle;\n    if (pos.isBomb) {\n        console.log('GAME OVER!', position);\n        return endBattle(battle);\n    }\n    pos = openPosition(pos);\n    if (pos.nearBombs === 0)\n        battle = openNearPositions(battle, pos);\n    return battle;\n}\nexport { startBattle, clickPosition };\n//# sourceMappingURL=Battle.js.map"]}
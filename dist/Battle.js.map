{"version":3,"sources":["../dist-esnext/Battle.js"],"names":["startBattle","fieldConfig","field","isOver","marks","bombsMarked","winner","openNearPositions","battle","pos","last","map","p","clickPosition","openAllField","col","winBattle","endBattle","loseBattle","oldBattle","win","clone","battleMarkPosition","position","x","y","opened","checkMarkedPositions","autoOpen","message","console","log","marked","isBomb","openedPos","nearBombs","checkOpenedPositions","numBombs","totalPos","length","correctMarked","incorrectMarked"],"mappings":"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","file":"Battle.js","sourcesContent":["import R from 'ramda';\nimport { getInitialField, markPosition, openPosition, positionIsValid, validNearPos } from './Field';\n// import { log } from './index';\nconst startBattle = (fieldConfig) => {\n    const field = getInitialField(fieldConfig);\n    return { field, isOver: false, marks: 0, bombsMarked: 0, winner: null };\n};\nconst openNearPositions = (battle, pos) => R.last(validNearPos(battle.field, pos).map(p => clickPosition(battle, p, true)));\nconst openAllField = (field) => field.map(col => col.map(pos => openPosition(pos)));\nconst winBattle = (battle) => endBattle(battle, true);\nconst loseBattle = (battle) => endBattle(battle, false);\nfunction endBattle(oldBattle, win) {\n    const battle = R.clone(oldBattle);\n    battle.isOver = true;\n    battle.winner = win;\n    battle.field = openAllField(battle.field);\n    return battle;\n}\nconst battleMarkPosition = (oldBattle, position) => {\n    const battle = R.clone(oldBattle);\n    if (!positionIsValid(battle.field, position))\n        return battle;\n    const pos = battle.field[position.x][position.y];\n    if (pos.opened)\n        return battle;\n    // if (pos.isBomb) {\n    //     return endBattle(battle);\n    // }\n    battle.field[position.x][position.y] = markPosition(pos);\n    return checkMarkedPositions(battle);\n};\nconst clickPosition = (oldBattle, position, autoOpen) => {\n    const battle = R.clone(oldBattle);\n    battle.message = null;\n    // log(!positionIsValid(battle.field, position));\n    if (!positionIsValid(battle.field, position)) {\n        console.log('POSITION IS INVALID');\n        return battle;\n    }\n    const pos = battle.field[position.x][position.y];\n    if (pos.marked !== 0)\n        return battle;\n    if (pos.opened) {\n        if (!autoOpen)\n            battle.message = 'Position Al ready open, try again';\n        return battle;\n    }\n    if (pos.isBomb)\n        return loseBattle(battle);\n    const openedPos = openPosition(pos);\n    battle.field[position.x][position.y] = openedPos;\n    if (openedPos.nearBombs && openedPos.nearBombs === 0)\n        return openNearPositions(battle, openedPos);\n    return checkOpenedPositions(battle);\n};\nconst checkOpenedPositions = (battle) => {\n    let openedPos = 0;\n    let numBombs = 0;\n    const totalPos = battle.field.length * battle.field[0].length;\n    battle.field.map(col => col.map(pos => {\n        if (pos.opened)\n            openedPos++;\n        if (pos.isBomb)\n            numBombs++;\n    }));\n    if (openedPos === totalPos - numBombs) {\n        return winBattle(battle);\n    }\n    return battle;\n};\nconst checkMarkedPositions = (battle) => {\n    let correctMarked = 0, incorrectMarked = 0, numBombs = 0;\n    battle.field.map(col => col.map(pos => {\n        if (pos.isBomb)\n            numBombs++;\n        if (pos.marked && pos.isBomb)\n            correctMarked++;\n        if (pos.marked && !pos.isBomb)\n            incorrectMarked++;\n    }));\n    if (correctMarked === numBombs && incorrectMarked === 0) {\n        return winBattle(battle);\n    }\n    return battle;\n};\nexport { startBattle, clickPosition, battleMarkPosition, openNearPositions };\n//# sourceMappingURL=Battle.js.map"]}